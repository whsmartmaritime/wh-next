@import "tailwindcss";
/* CSS variables: gutter, block spacing, column (cho các tính toán kích thước ảnh/stack) */
:root {
  /* Gutter + spacing (mobile-first to match sample breakpoints) */
  --gutter-h: 1rem;            /* <=768px */
  --block-spacing: 2rem;       /* <=768px */

  /* Column mặc định theo sample: màn nhỏ dùng 8 cột */
  --column: calc((100vw - (var(--gutter-h) * 2)) / 8);

  /* Màu đường kẻ nền cho BackgroundGrid */
  --grid-line-light: rgba(255, 255, 255, 0.08);
  --grid-line-dark: rgba(255, 255, 255, 0.12);
  --theme-border-color: var(--grid-line-light);

  /* Kích thước body theo sample */
  --font-body-size: 16px; /* <=1920px */

  /* Header sizing (mirror sample) */
  --header-height: 66px; /* mobile base */
  --top-bar-height: 3rem;
}

/* ≥768px */
@media (min-width: 768px) {
  :root {
    --gutter-h: 2rem;
    --block-spacing: 3.5rem;
  }
}

/* ≥1024px */
@media (min-width: 1024px) {
  :root {
    --gutter-h: 4rem;
    --block-spacing: 5rem;
    /* Ở >=1024px sample dùng 16 cột */
    --column: calc((100vw - (var(--gutter-h) * 2)) / 16);
  }
}

/* ≥1171px: nâng header lên 76px (đến 1600px) */
@media (min-width: 1171px) {
  :root {
    --header-height: 76px;
  }
}

/* ≥1601px: header 90px; gutter 8rem vẫn áp dụng từ 1600 trở lên */
@media (min-width: 1600px) {
  :root {
    --gutter-h: 8rem;
    --header-height: 90px;

  }
}


/* ≥1920px (extra-large). Khôi phục gutter động và tăng body size */
@media (min-width: 1920px) {
  :root {
    --gutter-h: calc(50vw - 40rem);
    --font-body-size: 18px;
  /* header-height 90px đã đặt ở >=1601px */
  }
}

/* Dark scheme mapping cho BackgroundGrid */
@media (prefers-color-scheme: dark) {
  :root {
  --theme-border-color: var(--grid-line-dark);
  }
}

/* Tailwind dark mode (class strategy): toggle by adding `class="dark"` on <html> */
@layer base {
  :root { color-scheme: light; }
  body { background-color: #ffffff; color: #000000; }

  .dark { color-scheme: dark; }
  .dark body { background-color: #000000; color: #ffffff; }

  /* Ensure grid line color switches when .dark is set explicitly */
  .dark { --theme-border-color: var(--grid-line-dark); }

  /* Base typography using CSS variables; Tailwind classes can override per component */
  html { font-size: 100%; }
  body { font-size: var(--font-body-size); line-height: 1.4; }
  /* Map headings to sample */
  h1 {
    margin: 3rem 0 2.4rem;
    font-size: 3rem;
    line-height: 1;
    font-weight: 500;
    letter-spacing: -0.05em;
  }
  /* h2–h5 map theo sample */
  h2 {
    margin: 2.4rem 0 1.8rem;
    font-size: 2rem;
    line-height: 1;
    font-weight: 500;
    letter-spacing: -0.05em;
  }
  h3 {
    margin: 1.8rem 0 1.2rem;
    font-size: 2rem;
    line-height: 1;
    font-weight: 500;
    letter-spacing: -0.05em;
  }
  h4 {
    margin: 1.2rem 0;
    font-size: 1.4rem;
    line-height: 1.2;
    font-weight: 500;
    letter-spacing: -0.05em;
  }
  h5 {
    margin: 1.2rem 0;
    font-size: 1rem;
    line-height: 1.2;
    font-weight: 500;
    letter-spacing: -0.05rem;
  }
  h6 {
    margin: 1.2rem 0;
    font-size: 13px;
    line-height: 1;
    font-weight: 400;
    letter-spacing: 0.25em;
    text-transform: uppercase;
  }
  p { font-size: var(--font-body-size); margin: 1em 0; }
  small { font-size: 0.875rem; }

  /* Ensure links inherit the computed text color (so dark-mode works) */
  a, a:visited { color: inherit; }
}

/* Align rem baseline with sample on very large screens: 1rem = 20px (>1600px) */
@media (min-width: 1601px) {
  html { font-size: 20px; }
}

/* Responsive adjustments to match sample mixins */
@media (max-width: 768px) {
  h1 { font-size: 2rem; }
  h2 { font-size: 1.5rem; }
  h3 { font-size: 1.5rem; }
  h4 { font-size: 1.125rem; }
  h5 { font-size: 1rem; }
}

@media (max-width: 1600px) {
  h6 { font-size: 12px; }
  h2 { font-size: 2.25rem; }
  h4 { font-size: 1.5rem; }
  h5 { font-size: 1.25rem; }
}

/* Reset nhỏ + logical properties (thân thiện RTL) */
* { box-sizing: border-box; }
html, body { height: 100%; }
body { margin: 0; }

/* Tailwind utilities: dùng gutter thay vì width cứng */
@layer utilities {
  /* 16-column grid to match the sample grid system */
  .grid-16 {
    display: grid;
    grid-template-columns: repeat(16, 1fr);
  }
  @media (max-width: 1023.98px) {
    .grid-16 {
      grid-template-columns: repeat(8, 1fr);
    }
  }

  /* Padding ngang theo gutter toàn cục */
  .px-gutter { padding-inline: var(--gutter-h); }
  /* Margin ngang theo gutter nếu cần canh lề ngoài */
  .mx-gutter { margin-inline: var(--gutter-h); }
  /* Padding dọc theo block spacing */
  .py-block { padding-block: var(--block-spacing); }

  /* Container “hiện đại”: full width + căn giữa + gutter responsive
     Có thể kết hợp thêm max-w-* của Tailwind nếu muốn đặt trần. */
  .container-gutter {
    width: 100%;
    margin-inline: auto;
    padding-inline: var(--gutter-h);
  }
}

/* Components: mặc định container cho các chỗ chưa theo chuẩn mới */
@layer components {
  /* Không ép max-width; nếu đang dùng Tailwind .container với max-width, rule này chỉ bổ sung padding inline */
  .container {
    width: 100%;
    margin-inline: auto;
    padding-inline: var(--gutter-h);
  }

  /* Fade-in animations used by Hero MediaStack (replicates sample keyframes) */
  @keyframes fadeIn {
    0% {
      opacity: 0;
      transform: translateY(4rem);
    }
    100% {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .fade-in-1 {
    opacity: 0;
    transform: translateY(4rem);
    animation: fadeIn 2s cubic-bezier(0, 0.2, 0.2, 1) 0.5s forwards;
  }

  .fade-in-2 {
    opacity: 0;
    transform: translateY(4rem);
    animation: fadeIn 3s cubic-bezier(0, 0.2, 0.2, 1) 1s forwards;
  }
}